{"version":3,"sources":["webpack:///./components/progress/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/40.1a1e3c73.js","sourcesContent":["export default \"# Progress 进度条\\n\\n`Progress` 组件用于进度展示。\\n\\n\\n## 基本用法\\n通过 `percent` 属性设置进度。\\n\\n```jsx\\nimport { Progress } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Progress percent={30} />\\n    <Progress percent={50} />\\n    <Progress\\n      percent={50}\\n      text={(percent) => <span style={{ whiteSpace: 'nowrap' }}>进度为 {percent}%</span>}\\n    />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 动态展示\\n动态变化的进度百分比。\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Progress, Button, Icon } from 'zarm-web';\\n\\nconst Demo = () => {\\n  const [percent, setPercent] = useState(0);\\n\\n  const declinePercent = () => {\\n    const newPercent = percent - 10 < 0\\n      ? 0\\n      : percent - 10;\\n    setPercent(newPercent);\\n  };\\n\\n  const increasePercent = () => {\\n    const newPercent = percent + 10 > 100\\n      ? 100\\n      : percent + 10;\\n    setPercent(newPercent);\\n  };\\n\\n  const theme = percent < 80\\n    ? 'warning'\\n    : 'success';\\n\\n  return (\\n    <>\\n      <div className=\\\"rows\\\" style={{ width: '100%' }}>\\n        <Progress percent={percent} theme={theme} />\\n      </div>\\n      <div className=\\\"rows\\\">\\n        <Button.Group>\\n          <Button onClick={declinePercent}><Icon type=\\\"minus\\\" /></Button>\\n          <Button onClick={increasePercent}><Icon type=\\\"add\\\" /></Button>\\n        </Button.Group>\\n      </div>\\n    </>\\n  )\\n};\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## 多主题\\n通过设置主题，调整进度条指示器的颜色。\\n主题通过`theme`属性设置，可选值为`primary`, `warning`, `danger`。\\n默认为 `primary`。\\n\\n```jsx\\nimport { Progress } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Progress percent={40} theme=\\\"primary\\\" />\\n    <Progress percent={40} theme=\\\"warning\\\" />\\n    <Progress percent={40} theme=\\\"danger\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 外观类型\\n通过设置外观类型，调整进度条外观。\\n类型通过`shape`属性设置，可选值为`line`, `circle`和`semi-circle`，分别表示直线型、原型、半圆型。\\n默认值是 `line`，即直线型。\\n\\n```jsx\\nimport { Progress } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Progress percent={40} shape=\\\"line\\\" />\\n    <Progress percent={40} shape=\\\"semi-circle\\\" />\\n    <Progress percent={40} shape=\\\"circle\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 线条粗细\\n通过 `strokeWidth` 属性，可接收一个数字指定的像素值。\\n默认值是根据进度条尺寸自动调整。\\n\\n```jsx\\nimport { Progress } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Progress percent={40} />\\n    <Progress percent={40} strokeWidth={4} />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 尺寸大小\\n通过设置尺寸，调整进度条外观大小。\\n尺寸通过 `size` 属性设置，可选值为 `lg`、`md`、`sm`，分别表示大型尺寸、标准尺寸、小型尺寸，或者 `数字指定的像素值`。\\n\\n\\n```jsx\\nimport { Progress } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Progress percent={40} size=\\\"sm\\\" />\\n    <Progress percent={40} size=\\\"md\\\" />\\n    <Progress percent={40} size=\\\"lg\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 线条形状\\n通过设置线条形状，调整线条的折线方式。\\n线条形状通过 `strokeShape` 属性设置，可选值为 `rect`，`round`，分别表示直角、圆角。\\n默认值是 `round`，即圆角。\\n\\n```jsx\\nimport { Progress } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Progress percent={40} strokeShape=\\\"rect\\\" />\\n    <Progress percent={40} strokeShape=\\\"round\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| theme | string | 'primary' | 主题，可选值 `primary`, `warning`, `danger` |\\n| percent | number | 0 | 进度百分比值（范围：0～100） |\\n| shape | string | 'line' | 类型，可选值 `line`, `circle`, `semi-circle` |\\n| size | string \\\\| number | 'md' | 尺寸大小，可选值 `lg`, `md`, `sm`，number类型的值，或者任何合法的css宽度值 |\\n| strokeShape | string | 'round' | 线条形状，可选值 `round`, `rect` |\\n| strokeWidth | number | 8 | 线条粗细 |\\n| text | (percent?: number) => string | (percent) => \\\\`\\\\${percent}%\\\\` | 文本信息显示 |\\n\""],"sourceRoot":""}