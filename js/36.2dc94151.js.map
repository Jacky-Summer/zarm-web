{"version":3,"sources":["webpack:///./components/message/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/36.2dc94151.js","sourcesContent":["export default \"# Message 全局提示\\n\\n全局展示操作反馈信息。\\n\\n\\n## 基本用法\\n最基本的用法。\\n\\n```jsx\\nimport { Message, Button } from 'zarm-web';\\n\\nReactDOM.render(\\n  <Button\\n    theme=\\\"primary\\\"\\n    onClick={() => {\\n      Message.info('This is the content of the message.');\\n    }}\\n  >\\n    Open\\n  </Button>\\n, mountNode);\\n```\\n\\n\\n\\n## 特定场景下的全局提示\\n特定场景下带图标的全局提示。\\n\\n```jsx\\nimport { Message, Button, Icon } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  showSuccess = () => {\\n    Message.success('This is the content of the message.');\\n  };\\n\\n  showError = () => {\\n    Message.error('This is the content of the message.');\\n  };\\n\\n  showWarning = () => {\\n    Message.warning('This is the content of the message.');\\n  };\\n\\n  showLoading = () => {\\n    const msg = Message.loading('This is the content of the message.');\\n    // 设置2.5s自动关闭\\n    setTimeout(msg.close, 2500);\\n  };\\n\\n  closeAll = () => Message.closeAll();\\n\\n  render() {\\n    return (\\n      <>\\n        <Button onClick={this.showSuccess}>Success</Button>\\n        <Button onClick={this.showWarning}>Warning</Button>\\n        <Button onClick={this.showError}>Error</Button>\\n        <Button onClick={this.showLoading}>Loading</Button>\\n        <br />\\n        <Button theme=\\\"danger\\\" onClick={this.closeAll}>Close all messages</Button>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## 增加回调\\n需要时可增加点击、关闭回调\\n\\n```jsx\\nimport { Message, Button } from 'zarm-web';\\n\\nReactDOM.render(\\n  <Button\\n    theme=\\\"primary\\\"\\n    onClick={() => {\\n      Message.info({\\n        stayTime: 1500,\\n        content: 'You can try clicking on me!',\\n        onClick: () => {\\n          alert('You clicked this message.');\\n        },\\n        onClose: () => {\\n          alert('The message will be closed');\\n        },\\n      });\\n    }}\\n  >\\n    Open\\n  </Button>\\n, mountNode);\\n```\\n\\n\\n\\n## 弹出位置\\n设置不同的弹出位置\\n\\n```jsx\\nimport { Message, Button } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  show(option) {\\n    Message.info({\\n      ...option,\\n      content: 'This is the content of the message.',\\n    });\\n  };\\n\\n  render() {\\n    return (\\n      <>\\n        <Button onClick={() => this.show({ top: 400 })}>Open the message 400px from the top</Button>\\n        <br />\\n        <Button onClick={() => this.show({ bottom: 100 })}>Open the message 100px from the bottom</Button>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## 更新指定消息内容\\n可以通过唯一的 key 来更新内容。\\n\\n```jsx\\nimport { Message, Button } from 'zarm-web';\\nconst key = 'updatable';\\n\\nclass Demo extends React.Component {\\n  show = () => {\\n    Message.loading({\\n      key,\\n      content: 'Loading...',\\n    });\\n    setTimeout(() => {\\n      Message.success({\\n        key,\\n        content: 'Success!',\\n      });\\n    }, 2000);\\n  };\\n\\n  close = () => {\\n    Message.close(key);\\n  };\\n\\n  render() {\\n    return (\\n      <>\\n        <Button onClick={this.show}>Open</Button>\\n        <Button onClick={this.close}>Close</Button>\\n      </>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| content | ReactNode | - | 展示内容 |\\n| stayTime | number | 5000 | 停留时长(ms)。设置 0 则不自动隐藏 |\\n| top | string \\\\| number | - | 脱离堆叠栈，距屏幕顶端位置 |\\n| bottom | string \\\\| number | - | 脱离堆叠栈，距屏幕底端位置 |\\n| key | string | 自动生成 | 唯一标识，可通过close方法关闭 |\\n| onClick | (e?: SyntheticEvent<any>) => void | - | 点击时触发的回调函数 |\\n| onClose | (e?: SyntheticEvent<any>) => void | - | 关闭时触发的回调函数 |\\n\\n<h3>静态方法</h3>\\n\\n```jsx\\n// 打开全局提示\\nMessage.[success|warning|info|error|loading](string | React.ReactNode | options): { close(): void };\\n\\n// 关闭指定全局提示\\nMessage.close(key: string): void;\\n\\n// 关闭所有全局提示\\nMessage.closeAll(): void;\\n\\n// 销毁\\nMessage.destroy(): void;\\n```\\n\""],"sourceRoot":""}