(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{707:function(n,e,o){"use strict";o.r(e),e.default="# Message \u5168\u5c40\u63d0\u793a\n\n\u5168\u5c40\u5c55\u793a\u64cd\u4f5c\u53cd\u9988\u4fe1\u606f\u3002\n\n\n## \u57fa\u672c\u7528\u6cd5\n\u6700\u57fa\u672c\u7684\u7528\u6cd5\u3002\n\n```jsx\nimport { Message, Button } from 'zarm-web';\n\nReactDOM.render(\n  <Button\n    theme=\"primary\"\n    onClick={() => {\n      Message.info('This is the content of the message.');\n    }}\n  >\n    Open\n  </Button>\n, mountNode);\n```\n\n\n\n## \u7279\u5b9a\u573a\u666f\u4e0b\u7684\u5168\u5c40\u63d0\u793a\n\u7279\u5b9a\u573a\u666f\u4e0b\u5e26\u56fe\u6807\u7684\u5168\u5c40\u63d0\u793a\u3002\n\n```jsx\nimport { Message, Button, Icon } from 'zarm-web';\n\nclass Demo extends React.Component {\n  showSuccess = () => {\n    Message.success('This is the content of the message.');\n  };\n\n  showError = () => {\n    Message.error('This is the content of the message.');\n  };\n\n  showWarning = () => {\n    Message.warning('This is the content of the message.');\n  };\n\n  showLoading = () => {\n    const msg = Message.loading('This is the content of the message.');\n    // \u8bbe\u7f6e2.5s\u81ea\u52a8\u5173\u95ed\n    setTimeout(msg.close, 2500);\n  };\n\n  closeAll = () => Message.closeAll();\n\n  render() {\n    return (\n      <>\n        <Button onClick={this.showSuccess}>Success</Button>\n        <Button onClick={this.showWarning}>Warning</Button>\n        <Button onClick={this.showError}>Error</Button>\n        <Button onClick={this.showLoading}>Loading</Button>\n        <br />\n        <Button theme=\"danger\" onClick={this.closeAll}>Close all messages</Button>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## \u589e\u52a0\u56de\u8c03\n\u9700\u8981\u65f6\u53ef\u589e\u52a0\u70b9\u51fb\u3001\u5173\u95ed\u56de\u8c03\n\n```jsx\nimport { Message, Button } from 'zarm-web';\n\nReactDOM.render(\n  <Button\n    theme=\"primary\"\n    onClick={() => {\n      Message.info({\n        stayTime: 1500,\n        content: 'You can try clicking on me!',\n        onClick: () => {\n          alert('You clicked this message.');\n        },\n        onClose: () => {\n          alert('The message will be closed');\n        },\n      });\n    }}\n  >\n    Open\n  </Button>\n, mountNode);\n```\n\n\n\n## \u5f39\u51fa\u4f4d\u7f6e\n\u8bbe\u7f6e\u4e0d\u540c\u7684\u5f39\u51fa\u4f4d\u7f6e\n\n```jsx\nimport { Message, Button } from 'zarm-web';\n\nclass Demo extends React.Component {\n  show(option) {\n    Message.info({\n      ...option,\n      content: 'This is the content of the message.',\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Button onClick={() => this.show({ top: 400 })}>Open the message 400px from the top</Button>\n        <br />\n        <Button onClick={() => this.show({ bottom: 100 })}>Open the message 100px from the bottom</Button>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## \u66f4\u65b0\u6307\u5b9a\u6d88\u606f\u5185\u5bb9\n\u53ef\u4ee5\u901a\u8fc7\u552f\u4e00\u7684 key \u6765\u66f4\u65b0\u5185\u5bb9\u3002\n\n```jsx\nimport { Message, Button } from 'zarm-web';\nconst key = 'updatable';\n\nclass Demo extends React.Component {\n  show = () => {\n    Message.loading({\n      key,\n      content: 'Loading...',\n    });\n    setTimeout(() => {\n      Message.success({\n        key,\n        content: 'Success!',\n      });\n    }, 2000);\n  };\n\n  close = () => {\n    Message.close(key);\n  };\n\n  render() {\n    return (\n      <>\n        <Button onClick={this.show}>Open</Button>\n        <Button onClick={this.close}>Close</Button>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| content | ReactNode | - | \u5c55\u793a\u5185\u5bb9 |\n| stayTime | number | 5000 | \u505c\u7559\u65f6\u957f(ms)\u3002\u8bbe\u7f6e 0 \u5219\u4e0d\u81ea\u52a8\u9690\u85cf |\n| top | string \\| number | - | \u8131\u79bb\u5806\u53e0\u6808\uff0c\u8ddd\u5c4f\u5e55\u9876\u7aef\u4f4d\u7f6e |\n| bottom | string \\| number | - | \u8131\u79bb\u5806\u53e0\u6808\uff0c\u8ddd\u5c4f\u5e55\u5e95\u7aef\u4f4d\u7f6e |\n| key | string | \u81ea\u52a8\u751f\u6210 | \u552f\u4e00\u6807\u8bc6\uff0c\u53ef\u901a\u8fc7close\u65b9\u6cd5\u5173\u95ed |\n| onClick | (e?: SyntheticEvent<any>) => void | - | \u70b9\u51fb\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570 |\n| onClose | (e?: SyntheticEvent<any>) => void | - | \u5173\u95ed\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570 |\n\n<h3>\u9759\u6001\u65b9\u6cd5</h3>\n\n```jsx\n// \u6253\u5f00\u5168\u5c40\u63d0\u793a\nMessage.[success|warning|info|error|loading](string | React.ReactNode | options): { close(): void };\n\n// \u5173\u95ed\u6307\u5b9a\u5168\u5c40\u63d0\u793a\nMessage.close(key: string): void;\n\n// \u5173\u95ed\u6240\u6709\u5168\u5c40\u63d0\u793a\nMessage.closeAll(): void;\n\n// \u9500\u6bc1\nMessage.destroy(): void;\n```\n"}}]);
//# sourceMappingURL=36.2dc94151.js.map