{"version":3,"sources":["webpack:///./components/grid/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/30.7a6da99e.js","sourcesContent":["export default \"# Grid 栅格\\n\\n采用24格划分的栅格系统\\n\\n\\n\\n## 基本用法\\n通过 span 设置宽度占比，默认占 24 格即 100%。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Row>\\n      <Col>\\n        <div>col</div>\\n      </Col>\\n    </Row>\\n    <Row>\\n      <Col span={12}>\\n        <div>col-12</div>\\n      </Col>\\n      <Col span={12}>\\n        <div>col-12</div>\\n      </Col>\\n    </Row>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 区块间隔\\n通过 Row 的 gutter 属性设置 Col 之间的水平间距。如果需要垂直间距，可以写成数组形式 [水平间距, 垂直间距]。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <h4>水平间距</h4>\\n    <Row gutter={6}>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>水平间距, 垂直间距</h4>\\n    <Row gutter={[6, 10]}>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={6}>\\n        <div>col-6</div>\\n      </Col>\\n      <Col span={8}>\\n        <div>col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div>col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div>col-8</div>\\n      </Col>\\n    </Row>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 左间距\\n通过 offset 属性，设置 Col 的 margin-left。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <Row gutter={[0, 10]}>\\n    <Col span={8}>\\n      <div>col-8</div>\\n    </Col>\\n    <Col span={8} offset={8}>\\n      <div>col-8 offset-8</div>\\n    </Col>\\n\\n    <Col span={6} offset={6}>\\n      <div>col-6 offset-6</div>\\n    </Col>\\n    <Col span={6} offset={6}>\\n      <div>col-6 offset-6</div>\\n    </Col>\\n  </Row>\\n, mountNode);\\n```\\n\\n\\n\\n## 左右偏移\\n通过 push 属性，设置 Col 的 左偏移; 通过 pull 属性，设置 Col 的 右偏移。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <Row>\\n    <Col span={6} push={18}>\\n      <div>col-6 push-18</div>\\n    </Col>\\n    <Col span={18} pull={6}>\\n      <div>col-18 pull-6</div>\\n    </Col>\\n  </Row>\\n, mountNode);\\n```\\n\\n\\n\\n## 布局\\n通过 justify 属性，设置 Col 其在父节点里面的排版方式。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <h4>justify start</h4>\\n    <Row justify=\\\"start\\\" className=\\\"row-bg\\\">\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>justify center</h4>\\n    <Row justify=\\\"center\\\" className=\\\"row-bg\\\">\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>justify end</h4>\\n    <Row justify=\\\"end\\\" className=\\\"row-bg\\\">\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>justify space-between</h4>\\n    <Row justify=\\\"space-between\\\" className=\\\"row-bg\\\">\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>justify space-around</h4>\\n    <Row justify=\\\"space-around\\\" className=\\\"row-bg\\\">\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n      <Col span={4}>\\n        <div>col-4</div>\\n      </Col>\\n    </Row>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 垂直对齐\\n通过 align 属性，设置 Col 的 垂直对齐方式。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <h4>align top</h4>\\n    <Row justify=\\\"center\\\" align=\\\"top\\\" className=\\\" row-bg\\\">\\n      <Col span={8}>\\n        <div className=\\\"col col-height-8\\\">col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div>col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div className=\\\"col col-height-10\\\">col-8</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>align middle</h4>\\n    <Row justify=\\\"center\\\" align=\\\"middle\\\" className=\\\" row-bg\\\">\\n      <Col span={8}>\\n        <div className=\\\"col col-height-8\\\">col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div>col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div className=\\\"col col-height-10\\\">col-8</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>align bottom</h4>\\n    <Row justify=\\\"center\\\" align=\\\"bottom\\\" className=\\\" row-bg\\\">\\n      <Col span={8}>\\n        <div className=\\\"col col-height-8\\\">col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div>col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div className=\\\"col col-height-10\\\">col-8</div>\\n      </Col>\\n    </Row>\\n\\n    <h4>align stretch</h4>\\n    <Row justify=\\\"center\\\" align=\\\"stretch\\\" className=\\\" row-stretch row-bg\\\">\\n      <Col span={8}>\\n        <div className=\\\"col col-height-8\\\">col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div>col-8</div>\\n      </Col>\\n      <Col span={8}>\\n        <div className=\\\"col col-height-10\\\">col-8</div>\\n      </Col>\\n    </Row>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 排序\\n通过 order 属性，设置 Col 的 顺序。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <Row justify=\\\"center\\\" align=\\\"top\\\">\\n    <Col span={8} order={2}>\\n      <div>col-8 第1个</div>\\n    </Col>\\n    <Col span={8} order={1}>\\n      <div>col-8 第2个</div>\\n    </Col>\\n    <Col span={8} order={0}>\\n      <div>col-8 第3个</div>\\n    </Col>\\n  </Row>\\n, mountNode);\\n```\\n\\n\\n\\n## flex\\n通过 flex 属性，设置 Col 样式。\\n\\n```jsx\\nimport { Row, Col } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Row gutter={[0, 10]}>\\n      <Col flex={2}>\\n        <div>2 / 5</div>\\n      </Col>\\n      <Col flex={3}>\\n        <div>3 / 5</div>\\n      </Col>\\n    </Row>\\n    <Row gutter={[0, 10]}>\\n      <Col flex=\\\"100px\\\">\\n        <div>100px</div>\\n      </Col>\\n      <Col flex=\\\"auto\\\">\\n        <div>Fill Rest</div>\\n      </Col>\\n    </Row>\\n    <Row gutter={[0, 10]}>\\n      <Col flex=\\\"1 1 200px\\\">\\n        <div>1 1 200px</div>\\n      </Col>\\n      <Col flex=\\\"0 1 300px\\\">\\n        <div>0 1 300px</div>\\n      </Col>\\n    </Row>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n<h3>Row</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| gutter | number \\\\| [number, number] | 0 | 设置栅格水平间隔，使用数组可同时设置`[水平间隔,垂直间隔]` |\\n| align | string | 'stretch' | 垂直对齐方式，可选值为 `top`、 `middle`、 `bottom`、 `stretch` |\\n| justify | string | 'start' | 水平排列方式，可选值为 `start`、`end`、`center`、`space-around`、`space-between` |\\n\\n<h3>Col</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| flex | string \\\\| number | - | flex 布局属性 |\\n| offset | number | - | 栅格左侧的间隔格数 |\\n| order | number | - | 栅格顺序 |\\n| pull | number | - | 栅格向左移动格数 |\\n| push | number | - | 栅格向右移动格数 |\\n| span | number | - | 栅格占位格数，为 0 时相当于 display: none |\\n\""],"sourceRoot":""}