{"version":3,"sources":["webpack:///./components/input/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/32.1f98fa33.js","sourcesContent":["export default \"# Input 输入框\\n基础表单输入组件。\\n\\n\\n\\n## 基本用法\\n\\n```jsx\\nimport { useState } from 'react';\\nimport { Input } from 'zarm-web';\\n\\nconst Demo = () => {\\n  const [value, setValue] = useState('');\\n\\n  return (\\n    <>\\n      <Input value={value} onChange={(e) => setValue(e.target.value)} placeholder=\\\"请输入\\\" />\\n      输入的值为：{value}\\n    </>\\n  );\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## 边框样式\\n通过设置 `bordered` 实现两种不同边框样式的输入框\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input bordered placeholder=\\\"请输入\\\" />\\n    <Input bordered={false} placeholder=\\\"请输入\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 不同尺寸\\n除了默认大小外，可以通过 `size` 设置 `lg`,`md`,`sm` 三种不同尺寸。\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <div className=\\\"rows\\\">\\n      <Input size=\\\"lg\\\" placeholder=\\\"请输入\\\" />\\n      <Input size=\\\"md\\\" placeholder=\\\"请输入\\\" />\\n      <Input size=\\\"sm\\\" placeholder=\\\"请输入\\\" />\\n    </div>\\n    <div className=\\\"rows\\\">\\n      <Input bordered size=\\\"lg\\\" placeholder=\\\"请输入\\\" />\\n      <Input bordered size=\\\"md\\\" placeholder=\\\"请输入\\\" />\\n      <Input bordered size=\\\"sm\\\" placeholder=\\\"请输入\\\" />\\n    </div>\\n    <div className=\\\"rows\\\">\\n      <Input bordered={false} size=\\\"lg\\\" placeholder=\\\"请输入\\\" />\\n      <Input bordered={false} size=\\\"md\\\" placeholder=\\\"请输入\\\" />\\n      <Input bordered={false} size=\\\"sm\\\" placeholder=\\\"请输入\\\" />\\n    </div>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 禁用状态\\n通过设置 `disabled` 来禁用输入框。\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input disabled placeholder=\\\"禁用状态\\\" />\\n    <Input disabled bordered placeholder=\\\"禁用状态\\\" />\\n    <Input disabled bordered={false} placeholder=\\\"禁用状态\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 只读状态\\n通过设置 `readonly` 属性，让输入框处于只读状态。\\n只显示文案，不显示输入框样式，用于详情页面的展示。\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(<Input readOnly defaultValue=\\\"我是只读状态\\\" placeholder=\\\"只读状态\\\" />, mountNode);\\n```\\n\\n\\n\\n## 添加前置和后置标签\\n`bordered` 属性为 true 时，能够通过 `addonBefore` 和 `addonAfter` 属性设置前置和后置标签。\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input bordered addonBefore=\\\"http://\\\" placeholder=\\\"请输入\\\" />\\n    <Input bordered addonAfter=\\\".com\\\" placeholder=\\\"请输入\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 前缀和后缀\\n通过prefix和suffix属性设置前缀和后缀。\\n\\n```jsx\\nimport { Input, Icon } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input prefix=\\\"http://\\\" suffix=\\\".com\\\" placeholder=\\\"请输入\\\" />\\n    <Input bordered prefix=\\\"¥\\\" suffix=\\\"元\\\" placeholder=\\\"请输入\\\" />\\n    <Input bordered={false} prefix={<Icon type=\\\"keyboard\\\" />} suffix={<Icon type=\\\"date\\\" />} placeholder=\\\"请输入\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 带清除图标\\n带移除图标的输入框，点击图标删除所有内容\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(<Input clearable placeholder=\\\"请输入\\\" />, mountNode);\\n```\\n\\n\\n\\n## 输入框组合\\n输入框的组合展现, 默认为compact模式。\\n```jsx\\nimport { Input, Select } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input.Group>\\n      <Input style={{ width: 60 }} defaultValue=\\\"021\\\" />\\n      <Input style={{ flex: 1 }} defaultValue=\\\"10109955\\\" />\\n    </Input.Group>\\n    <Input.Group>\\n      <Input style={{ width: 60 }} bordered defaultValue=\\\"021\\\" />\\n      <Input style={{ flex: 1 }} bordered defaultValue=\\\"10109955\\\" />\\n    </Input.Group>\\n    <Input.Group compact={false}>\\n      <Input style={{ width: 60, marginRight: 10 }} bordered defaultValue=\\\"021\\\" />\\n      <Input style={{ flex: 1, marginRight: 10 }} bordered defaultValue=\\\"10109955\\\" />\\n      <Input style={{ flex: 1 }} bordered defaultValue=\\\"10109955\\\" />\\n    </Input.Group>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 搜索场景的组合\\n通过设置前缀图标和后置标签来组合成搜索框\\n\\n```jsx\\nimport { Input, Button, Icon } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input placeholder=\\\"please input gender\\\" prefix={<Icon type=\\\"search\\\" />} />\\n    <Input bordered={false} placeholder=\\\"please input gender\\\" prefix={<Icon type=\\\"search\\\" />} />\\n    <Input bordered placeholder=\\\"please input gender\\\" prefix={<Icon type=\\\"search\\\" />} />\\n    <Input.Group>\\n      <Input bordered placeholder=\\\"please input gender\\\" />\\n      <Button theme=\\\"primary\\\" icon=\\\"search\\\" />\\n    </Input.Group>\\n    <Input.Group size=\\\"lg\\\" shape=\\\"round\\\">\\n      <Input bordered placeholder=\\\"please input gender\\\" />\\n      <Button theme=\\\"primary\\\">Search</Button>\\n    </Input.Group>\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 多行文本\\n将 `type` 属性设置为 `textarea`，同时可设置 `rows`，`cols` 属性。\\n设置了 `maxLength` 之后，会在右下角显示可以输入的字数。\\n设置了 `showLength` 会在右下角显示当前输入的字数。\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input type=\\\"textarea\\\" rows={3} placeholder=\\\"请输入\\\" />\\n    <Input type=\\\"textarea\\\" showLength bordered={false} rows={3} maxLength={120} placeholder=\\\"请输入\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## 高度自适应\\n设置 `autoHeight` 会变为自适应高度的 `textarea`。\\n\\n```jsx\\nimport { Input } from 'zarm-web';\\n\\nReactDOM.render(\\n  <>\\n    <Input type=\\\"textarea\\\" autoHeight placeholder=\\\"自适应高度\\\" />\\n    <Input type=\\\"textarea\\\" autoHeight={{ minRows: 3, maxRows: 6 }} placeholder=\\\"自适应高度, 并且限制最小行数和最大行数\\\" />\\n  </>\\n, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| type | string | 'text' | 类型，可选值 `text`、`number`、`password`、`textarea` |\\n| shape | string | 'radius' | 类型，可选值 `rect`、`radius`、`round` |\\n| value | string | - | 值 |\\n| defaultValue | string | - | 初始值 |\\n| disabled | boolean | false | 是否禁用 |\\n| readOnly | boolean | false | 是否只读 |\\n| maxLength | number | - | 输入字数上限 |\\n\\n<h3>Input 单行文本</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| bordered | 'underline' \\\\| boolean | 'underline' | 边框样式 |\\n| size | string | 'md' | 设置尺寸，可选值为 `lg`、 `md`、`sm` |\\n| clearable | boolean | false | 是否显示清除按钮，必须为受控组件（属性包含value、onChange）时方可生效。 |\\n| prefix | ReactNode | - | 设置前缀内容 |\\n| suffix | ReactNode | - | 设置后缀内容 |\\n| addonBefore | ReactNode | - | 设置前置标签 |\\n| addonAfter | ReactNode | - | 设置后置标签 |\\n| onChange | (e?: React.ChangeEvent&lt;HTMLInputElement&gt;) => void | - | 值变化时触发的回调函数 |\\n\\n<h3>Textarea 多行文本</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| bordered | boolean  | true | 边框样式 |\\n| rows | number | - | 显示行数 |\\n| autoHeight | boolean/object | false | 是否高度自适应, 可设置成true/false/{ minRows: 2, maxRows: 5 } |\\n| showLength | boolean | false | 是否显示输入字数 |\\n| onChange | (e?: React.ChangeEvent&lt;HTMLTextAreaElement&gt;) => void | - | 值变化时触发的回调函数 |\\n\""],"sourceRoot":""}