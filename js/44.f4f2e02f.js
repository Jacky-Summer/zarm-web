(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{711:function(n,e,t){"use strict";t.r(e),e.default='# Tabs \u9009\u9879\u5361\n\u9009\u9879\u5361\u5207\u6362\u7ec4\u4ef6\u3002\n\n\n\n## \u57fa\u672c\u7528\u6cd5\n\n```jsx\nimport { Tabs } from \'zarm-web\';\nconst { Panel } = Tabs;\n\nReactDOM.render(\n  <Tabs>\n    <Panel title="Tab1">Content of Tab1</Panel>\n    <Panel title="Tab2">Content of Tab2</Panel>\n    <Panel title="Tab3">Content of Tab3</Panel>\n    <Panel title="Tab4">Content of Tab4</Panel>\n  </Tabs>\n, mountNode);\n```\n\n\n\n## \u591a\u79cd\u5927\u5c0f\n\n```jsx\nimport { Tabs, Radio } from \'zarm-web\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  state = {\n    size: \'md\',\n  }\n\n  handleSize = (size) => {\n    this.setState({ size });\n  }\n\n  render() {\n    const { size } = this.state;\n\n    return (\n      <>\n        <div className="rows">\n          <Radio.Group ghost type="button" value={size} onChange={(value) => this.handleSize(value)}>\n            <Radio value="sm">sm</Radio>\n            <Radio value="md">md</Radio>\n            <Radio value="lg">lg</Radio>\n          </Radio.Group>\n        </div>\n        <div className="rows">\n          <Tabs size={size}>\n            <Panel title="Tab1">Content of Tab1</Panel>\n            <Panel title="Tab2">Content of Tab2</Panel>\n            <Panel title="Tab3">Content of Tab3</Panel>\n            <Panel title="Tab4">Content of Tab4</Panel>\n          </Tabs>\n        </div>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## \u5361\u7247\u5f0f\n\n```jsx\nimport { Tabs, Icon, Button } from \'zarm-web\';\nconst { Panel } = Tabs;\n\nReactDOM.render(\n  <Tabs type="card">\n    <Panel title="Tab1">Content of Tab1</Panel>\n    <Panel title="Tab2">Content of Tab2</Panel>\n    <Panel title="Tab3">Content of Tab3</Panel>\n    <Panel title="Tab4">Content of Tab4</Panel>\n  </Tabs>\n, mountNode);\n```\n\n\n\n## \u65e0\u8fb9\u6846\u5361\u7247\u5f0f\n\n```jsx\nimport { Tabs, Button } from \'zarm-web\';\nconst { Panel } = Tabs;\n\nReactDOM.render(\n  <div className="box" style={{ background: \'#f2f2f2\', padding: 32 }}>\n    <Tabs type="noborder-card">\n      <Panel title="Tab1" style={{ height: 100, padding: 15 }}>Content of Tab1</Panel>\n      <Panel title="Tab2" style={{ height: 100, padding: 15 }}>Content of Tab2</Panel>\n      <Panel title="Tab3" style={{ height: 100, padding: 15 }}>Content of Tab3</Panel>\n      <Panel title="Tab4" style={{ height: 100, padding: 15 }}>Content of Tab4</Panel>\n    </Tabs>\n  </div>\n, mountNode);\n```\n\n\n\n## \u53ef\u6eda\u52a8\n\n```jsx\nimport { Tabs, Radio } from \'zarm-web\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  state = {\n    direction: \'horizontal\',\n  };\n\n  handleDirection = (direction) => {\n    this.setState({ direction });\n  }\n\n  render() {\n    const { direction } = this.state;\n\n    return (\n      <>\n        <div className="rows">\n          <Radio.Group\n            ghost\n            type="button"\n            value={direction}\n            onChange={(value) => this.handleDirection(value)}\n          >\n            <Radio value="horizontal">Horizontal</Radio>\n            <Radio value="vertical">Vertical</Radio>\n          </Radio.Group>\n        </div>\n        <div className="rows">\n          <Tabs\n            style={{ height: 200 }}\n            direction={direction}\n            onPrevClick={(e) => console.log(\'prev click: \', e)}\n            onNextClick={(e) => console.log(\'next click\', e)}\n          >\n            {\n              [...Array(20).keys()].map((item, index) => (\n                <Panel key={+index} title={`Tab${index + 1}`}>\n                  Content of Tab{index + 1}\n                </Panel>\n              ))\n            }\n          </Tabs>\n        </div>\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## \u65b0\u589e\u548c\u5173\u95ed\n\n```jsx\nimport { Tabs, Button } from \'zarm-web\';\nconst { Panel } = Tabs;\n\nclass Demo extends React.Component {\n  state = {\n    value: 2,\n    tabs: [\n      {\n        closable: true,\n        title: \'Tab1\',\n      }, {\n        closable: true,\n        title: \'Tab2\',\n      }, {\n        closable: true,\n        title: \'Tab3\',\n      },\n    ]\n  };\n  \n  onTabClose = (targetIndex) => {\n    const { tabs, value } = this.state;\n    const filterTabs = tabs.filter((item, index) => targetIndex !== index);\n    let currentValue;\n    if (targetIndex !== 0) {\n      if (targetIndex > value) {\n        currentValue = value;\n      } else {\n        currentValue = value - 1;\n      }\n    } else {\n      currentValue = 0;\n    }\n    this.setState({\n      tabs: filterTabs,\n      value: currentValue,\n    });\n  }\n\n  onTabAdd = () => {\n    const { tabs, value } = this.state;\n    tabs.push({\n      title: \'New Tap\',\n      closable: true,\n      key: Math.random().toString(36).substring(2) + Date.now().toString(36),\n    });\n    this.setState({\n      tabs,\n      value: tabs.length - 1,\n    });\n  }\n\n  render() {\n    return (\n      <div className="edit-tabs">\n        <Tabs\n          type="card"\n          value={this.state.value}\n          onChange={(index) => this.setState({ value: index })}\n          onTabClose={this.onTabClose}\n        >\n          {\n            this.state.tabs.map((item, index) => (\n              <Panel key={+index} title={item.title} closable={item.closable}>\n                Content of {item.title}\n              </Panel>\n            ))\n          }\n        </Tabs>\n        <div className="add-button" onClick={this.onTabAdd}>+</div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Demo />, mountNode);\n```\n\n\n\n## API\n\n<h3>Tabs</h3>\n\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| value | number | 0 | \u5f53\u524d\u9009\u4e2d\u7684\u9009\u9879\u5361\u7d22\u5f15\u503c |\n| defaultValue | number | 0 | \u9ed8\u8ba4\u9009\u4e2d\u7684\u9009\u9879\u5361\u7d22\u5f15\u503c |\n| type | string | \'line\' | \u9009\u9879\u5361\u7c7b\u578b\uff0c\u53ef\u9009\u503c\u4e3a `line` \u3001 `card` \u3001 `noborder-card`\uff0c\u5206\u522b\u8868\u793a\u7ebf\u578b\u3001\u5361\u7247\u578b\u3001\u65e0\u8fb9\u6846\u5361\u7247\u578b |\n| direction | string | \'horizontal\' | \u9009\u9879\u5361\u65b9\u5411 \u53ef\u9009\u503c\u4e3a`horizontal` \u3001 `vertical`\uff0c\u5206\u522b\u8868\u793a\u6a2a\u5411\u548c\u7eb5\u5411 |\n| size | string | \'md\' | \u9009\u9879\u5361\u5927\u5c0f \u53ef\u9009\u503c\u4e3a`sm` \u3001 `md` \u3001 `lg`  |\n| animated | boolean | true | \u662f\u5426\u4f7f\u7528\u5207\u6362\u52a8\u753b\uff0c\u5728direction\u4e3a`horizontal`\u65f6\u751f\u6548 |\n| onChange | (index?: number) => void | - | \u9009\u9879\u5361\u5207\u6362\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570\uff0c\u53c2\u6570\u4e3a\u5f53\u524d\u9009\u4e2d\u7684\u9009\u9879\u5361\u7d22\u5f15\u503c |\n| onTabClose | (index?: number) => void | - | \u70b9\u51fb\u9009\u9879\u5361\u5173\u95ed\u6309\u94ae\u65f6\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570\uff0c\u53c2\u6570\u4e3a\u5f53\u524d\u5220\u9664\u7684\u9009\u9879\u5361\u7d22\u5f15\u503c |\n| onPrevClick | (e?: number) => void | - | \u70b9\u51fb\u4e0a\u4e00\u9875\u7684\u7bad\u5934\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570 |\n| onNextClick | (e?: number) => void | - | \u70b9\u51fb\u4e0b\u4e00\u9875\u7684\u7bad\u5934\u89e6\u53d1\u7684\u56de\u8c03\u51fd\u6570 |\n\n<h3>Tabs.Panel</h3>\n\n| \u5c5e\u6027 | \u7c7b\u578b | \u9ed8\u8ba4\u503c | \u8bf4\u660e |\n| :--- | :--- | :--- | :--- |\n| title | string | - | \u9009\u9879\u5361\u540d\u79f0 |\n| disabled | boolean | false | \u662f\u5426\u7981\u7528 |\n| closable | boolean | false | \u662f\u5426\u53ef\u5173\u95ed |\n'}}]);
//# sourceMappingURL=44.f4f2e02f.js.map