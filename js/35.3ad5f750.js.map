{"version":3,"sources":["webpack:///./components/menu/demo.md"],"names":[],"mappings":"2FAAA,OAAe","file":"js/35.3ad5f750.js","sourcesContent":["export default \"# Menu 导航菜单\\n为侧边栏等提供导航菜单列表\\n\\n\\n\\n## 内联模式\\n默认 mode=inline，子菜单内嵌在菜单中\\n\\n```jsx\\nimport { Menu, Icon } from 'zarm-web';\\n\\nconst wrapperStyle = {\\n  width: 238,\\n  border: '1px solid #efefef',\\n};\\n\\nReactDOM.render(\\n  <Menu style={wrapperStyle}>\\n    <Menu.SubMenu icon={<Icon type=\\\"keyboard\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 1\\\">\\n      <Menu.Item>Item 1</Menu.Item>\\n      <Menu.Item>Item 2</Menu.Item>\\n      <Menu.Item>Item 3</Menu.Item>\\n      <Menu.Item>Item 4</Menu.Item>\\n    </Menu.SubMenu>\\n    <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 2\\\">\\n      <Menu.ItemGroup title=\\\"ItemGroup 1\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n      </Menu.ItemGroup>\\n      <Menu.ItemGroup title=\\\"ItemGroup 2\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n      </Menu.ItemGroup>\\n    </Menu.SubMenu>\\n    <Menu.SubMenu icon={<Icon type=\\\"time\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 3\\\">\\n      <Menu.Item>Item 1</Menu.Item>\\n      <Menu.Item>Item 2</Menu.Item>\\n      <Menu.Item>Item 3</Menu.Item>\\n      <Menu.Item>Item 4</Menu.Item>\\n    </Menu.SubMenu>\\n    <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 4\\\">\\n      <Menu.Item>Item 1</Menu.Item>\\n      <Menu.Item>Item 2</Menu.Item>\\n      <Menu.Item>Item 3</Menu.Item>\\n      <Menu.Item>Item 4</Menu.Item>\\n    </Menu.SubMenu>\\n  </Menu>\\n, mountNode);\\n```\\n\\n\\n\\n## 深色主题的内联模式\\n通过 theme 属性可以设置深色主题\\n\\n```jsx\\nimport { Menu, Icon } from 'zarm-web';\\n\\nconst wrapperStyle = {\\n  width: 238,\\n};\\n\\nReactDOM.render(\\n  <Menu theme=\\\"dark\\\" style={wrapperStyle}>\\n    <Menu.SubMenu icon={<Icon type=\\\"keyboard\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 1\\\">\\n      <Menu.Item>Item 1</Menu.Item>\\n      <Menu.Item>Item 2</Menu.Item>\\n      <Menu.Item>Item 3</Menu.Item>\\n      <Menu.Item>Item 4</Menu.Item>\\n    </Menu.SubMenu>\\n    <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 2\\\">\\n      <Menu.ItemGroup title=\\\"ItemGroup 1\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n      </Menu.ItemGroup>\\n      <Menu.ItemGroup title=\\\"ItemGroup 2\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n      </Menu.ItemGroup>\\n    </Menu.SubMenu>\\n    <Menu.SubMenu icon={<Icon type=\\\"time\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 3\\\">\\n      <Menu.Item>Item 1</Menu.Item>\\n      <Menu.Item>Item 2</Menu.Item>\\n      <Menu.Item>Item 3</Menu.Item>\\n      <Menu.Item>Item 4</Menu.Item>\\n    </Menu.SubMenu>\\n    <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 4\\\">\\n      <Menu.Item>Item 1</Menu.Item>\\n      <Menu.Item>Item 2</Menu.Item>\\n      <Menu.Item>Item 3</Menu.Item>\\n      <Menu.Item>Item 4</Menu.Item>\\n    </Menu.SubMenu>\\n  </Menu>\\n, mountNode);\\n```\\n\\n\\n\\n## 可缩起的内联菜单\\n通过控制 inlineCollapsed 属性，内联模式可以缩起或展开\\n\\n```jsx\\nimport { Menu, Icon, Button } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  state = {\\n    collapse: false,\\n  };\\n\\n  toggleCollapse = () => {\\n    this.setState({ collapse: !this.state.collapse });\\n  };\\n\\n  render() {\\n    return (\\n      <div style={{ width: 238 }}>\\n        <Button theme=\\\"primary\\\" onClick={this.toggleCollapse} style={{ marginBottom: 16 }}>Toggle</Button>\\n        <Menu theme=\\\"dark\\\" inlineCollapsed={this.state.collapse} style={{ border: '1px solid #efefef' }}>\\n          <Menu.SubMenu icon={<Icon type=\\\"broadcast\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 1\\\">\\n            <Menu.Item>Item 1</Menu.Item>\\n            <Menu.Item>Item 2</Menu.Item>\\n            <Menu.SubMenu title=\\\"Item 3\\\">\\n              <Menu.Item>Item 31</Menu.Item>\\n              <Menu.Item>Item 32</Menu.Item>\\n              <Menu.Item>Item 33</Menu.Item>\\n              <Menu.Item>Item 34</Menu.Item>\\n            </Menu.SubMenu>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu icon={<Icon type=\\\"keyboard\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 2\\\">\\n            <Menu.Item>Item 1</Menu.Item>\\n            <Menu.Item>Item 2</Menu.Item>\\n            <Menu.Item>Item 3</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 3\\\">\\n            <Menu.Item>Item 1</Menu.Item>\\n            <Menu.Item>Item 2</Menu.Item>\\n            <Menu.Item>Item 3</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.Item icon={<Icon type=\\\"time\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 4\\\">SubMenu 4</Menu.Item>\\n        </Menu>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode)\\n```\\n\\n\\n\\n## 垂直模式\\n设置 mode=vertical，子菜单以浮层的方式展示\\n\\n```jsx\\nimport { Menu, Icon } from 'zarm-web';\\n\\nconst wrapperStyle = {\\n  width: 238,\\n  border: '1px solid #efefef'\\n};\\n\\nReactDOM.render(\\n  <div style={wrapperStyle}>\\n    <Menu mode=\\\"vertical\\\">\\n      <Menu.SubMenu icon={<Icon type=\\\"broadcast\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 1\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n        <Menu.SubMenu title=\\\"Item 3\\\">\\n          <Menu.Item>Item 31</Menu.Item>\\n          <Menu.Item>Item 32</Menu.Item>\\n        </Menu.SubMenu>\\n      </Menu.SubMenu>\\n      <Menu.SubMenu icon={<Icon type=\\\"keyboard\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 2\\\">\\n        <Menu.ItemGroup title=\\\"ItemGroup 1\\\">\\n          <Menu.Item>Item 1</Menu.Item>\\n          <Menu.Item>Item 2</Menu.Item>\\n        </Menu.ItemGroup>\\n        <Menu.Divider />\\n        <Menu.ItemGroup title=\\\"ItemGroup 2\\\">\\n          <Menu.Item>Item 1</Menu.Item>\\n          <Menu.Item>Item 2</Menu.Item>\\n        </Menu.ItemGroup>\\n      </Menu.SubMenu>\\n      <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 3\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n        <Menu.Item>Item 3</Menu.Item>\\n        <Menu.Item>Item 4</Menu.Item>\\n      </Menu.SubMenu>\\n      <Menu.Item icon={<Icon type=\\\"time\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 4\\\">SubMenu 4</Menu.Item>\\n    </Menu>\\n  </div>\\n, mountNode);\\n```\\n\\n## 深色主题的垂直模式\\n通过 theme 属性可以设置深色主题\\n\\n```jsx\\nimport { Menu, Icon } from 'zarm-web';\\n\\nconst wrapperStyle = {\\n  width: 238,\\n  border: '1px solid #efefef',\\n};\\n\\nReactDOM.render(\\n  <div style={wrapperStyle}>\\n    <Menu mode=\\\"vertical\\\" theme=\\\"dark\\\">\\n      <Menu.SubMenu icon={<Icon type=\\\"broadcast\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 1\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n        <Menu.SubMenu title=\\\"Item 3\\\">\\n          <Menu.Item>Item 31</Menu.Item>\\n          <Menu.Item>Item 32</Menu.Item>\\n        </Menu.SubMenu>\\n      </Menu.SubMenu>\\n      <Menu.SubMenu icon={<Icon type=\\\"keyboard\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 2\\\">\\n        <Menu.ItemGroup title=\\\"ItemGroup 1\\\">\\n          <Menu.Item>Item 1</Menu.Item>\\n          <Menu.Item>Item 2</Menu.Item>\\n        </Menu.ItemGroup>\\n        <Menu.Divider />\\n        <Menu.ItemGroup title=\\\"ItemGroup 2\\\">\\n          <Menu.Item>Item 1</Menu.Item>\\n          <Menu.Item>Item 2</Menu.Item>\\n        </Menu.ItemGroup>\\n      </Menu.SubMenu>\\n      <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 3\\\">\\n        <Menu.Item>Item 1</Menu.Item>\\n        <Menu.Item>Item 2</Menu.Item>\\n        <Menu.Item>Item 3</Menu.Item>\\n      </Menu.SubMenu>\\n      <Menu.Item icon={<Icon type=\\\"time\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 4\\\">SubMenu 4</Menu.Item>\\n    </Menu>\\n  </div>\\n, mountNode);\\n```\\n\\n\\n\\n## 只展开当前子菜单\\n通过 openKeys 属性控制展开的子菜单\\n\\n```jsx\\nimport { Menu, Icon } from 'zarm-web';\\n\\nclass Demo extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.state = {\\n      openKeys: ['a']\\n    }\\n  }\\n  onOpenChange(openKeys) {\\n    console.log(openKeys)\\n    const lastKey = openKeys.pop();\\n    this.setState({\\n      openKeys: [lastKey]\\n    });\\n  }\\n  render() {\\n    const wrapperStyle = {\\n      width: 238,\\n      border: '1px solid #efefef',\\n      backgroundColor: '#001529'\\n    }\\n    const { openKeys } = this.state;\\n    return (\\n      <div style={wrapperStyle}>\\n        <Menu\\n          theme=\\\"dark\\\"\\n          openKeys={openKeys}\\n          defaultOpenKeys={['a']}\\n          onOpenChange={(keys) => this.onOpenChange(keys)}\\n        >\\n          <Menu.SubMenu icon={<Icon type=\\\"keyboard\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 1\\\" key=\\\"a\\\">\\n            <Menu.Item>Item 1</Menu.Item>\\n            <Menu.Item>Item 2</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu icon={<Icon type=\\\"date\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 2\\\" key=\\\"b\\\">\\n            <Menu.Item>Item 1</Menu.Item>\\n            <Menu.Item>Item 2</Menu.Item>\\n          </Menu.SubMenu>\\n          <Menu.SubMenu icon={<Icon type=\\\"time\\\" size=\\\"lg\\\" />} title=\\\"SubMenu 3\\\" key=\\\"c\\\">\\n            <Menu.Item>Item 1</Menu.Item>\\n            <Menu.Item>Item 2</Menu.Item>\\n          </Menu.SubMenu>\\n        </Menu>\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<Demo />, mountNode);\\n```\\n\\n\\n\\n## API\\n\\n<h3>Menu</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| prefixCls | string | 'zw-menu' | 组件样式前缀 |\\n| className | string | - | 自定义组件根元素类名 |\\n| style | CSSProperties | - | 自定义组件根元素样式 |\\n| mode | string | 'inline' | 设置菜单模式，可选值`inline`、`vertical` |\\n| theme | string | 'light' | 设置主题，可选值`light`、`dark` |\\n| defaultOpenKeys | string[] | - | 默认展开的子菜单key |\\n| defaultSelectedKeys | string[] | - | 默认选中的菜单key |\\n| openKeys | string[] | - | 需要展开的子菜单key |\\n| selectedKeys | string[] | - | 需要选中的菜单项key |\\n| inlineIndent | number | 12 | `inline`模式时每一层菜单的缩进 |\\n| inlineCollapsed | boolean | false | `inline`模式时菜单是否收起 |\\n| onSelect | (selectedKeys: string[]) => void | noop | 菜单选中时的回调函数 |\\n| onOpenChange | (openKeys: string[]) => void | noop | 子菜单收起展开时候的回调函数 |\\n\\n\\n<h3>Menu.Item</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| className | string | - | 自定义菜单项类名 |\\n| style | CSSProperties | - | 自定义菜单项样式 |\\n| icon | React.ReactNode | - | 菜单左侧Icon |\\n| title | React.ReactNode | - | `inline`模式菜单收起，鼠标移入的提示文案 |\\n| key | string | - | 菜单的唯一性key值 |\\n| disabled | boolean | false | 是否置灰不可点击 |\\n| onClick | (e: React.MouseEvent, itemKey: string) => void | noop | 点击菜单后的回调函数 |\\n| onDoubleClick | (e: React.MouseEvent, itemKey: string) => void | noop | 双击菜单后的回调函数 |\\n\\n\\n<h3>Menu.SubMenu</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| className | string | - | 自定义子菜单类名 |\\n| style | CSSProperties | - | 自定义子菜单样式 |\\n| icon | React.ReactNode | - | 菜单左侧Icon |\\n| title | React.ReactNode | - | 子菜单名称  |\\n| key | string | - | 子菜单的唯一性key值 |\\n\\n\\n<h3>Menu.ItemGroup</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| className | string | - | 自定义菜单组类名 |\\n| style | CSSProperties | - | 自定义菜单组样式 |\\n| title | string | - | 菜单组名称  |\\n\\n<h3>Menu.Divider</h3>\\n\\n| 属性 | 类型 | 默认值 | 说明 |\\n| :--- | :--- | :--- | :--- |\\n| className | string | - | 自定义分割线类名 |\\n| style | CSSProperties | - | 自定义分割线样式 |\\n\""],"sourceRoot":""}